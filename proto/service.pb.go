// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FolderInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FolderInfo) Reset()         { *m = FolderInfo{} }
func (m *FolderInfo) String() string { return proto.CompactTextString(m) }
func (*FolderInfo) ProtoMessage()    {}
func (*FolderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ce715f27580cb8fe, []int{0}
}
func (m *FolderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FolderInfo.Unmarshal(m, b)
}
func (m *FolderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FolderInfo.Marshal(b, m, deterministic)
}
func (dst *FolderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FolderInfo.Merge(dst, src)
}
func (m *FolderInfo) XXX_Size() int {
	return xxx_messageInfo_FolderInfo.Size(m)
}
func (m *FolderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FolderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FolderInfo proto.InternalMessageInfo

func (m *FolderInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FileInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Mode                 uint32   `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ce715f27580cb8fe, []int{1}
}
func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (dst *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(dst, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileInfo) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type FileData struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileData) Reset()         { *m = FileData{} }
func (m *FileData) String() string { return proto.CompactTextString(m) }
func (*FileData) ProtoMessage()    {}
func (*FileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ce715f27580cb8fe, []int{2}
}
func (m *FileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileData.Unmarshal(m, b)
}
func (m *FileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileData.Marshal(b, m, deterministic)
}
func (dst *FileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileData.Merge(dst, src)
}
func (m *FileData) XXX_Size() int {
	return xxx_messageInfo_FileData.Size(m)
}
func (m *FileData) XXX_DiscardUnknown() {
	xxx_messageInfo_FileData.DiscardUnknown(m)
}

var xxx_messageInfo_FileData proto.InternalMessageInfo

func (m *FileData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ContainerInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerInfo) Reset()         { *m = ContainerInfo{} }
func (m *ContainerInfo) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo) ProtoMessage()    {}
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ce715f27580cb8fe, []int{3}
}
func (m *ContainerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo.Unmarshal(m, b)
}
func (m *ContainerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo.Marshal(b, m, deterministic)
}
func (dst *ContainerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo.Merge(dst, src)
}
func (m *ContainerInfo) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo.Size(m)
}
func (m *ContainerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo proto.InternalMessageInfo

func (m *ContainerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Res struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Res) Reset()         { *m = Res{} }
func (m *Res) String() string { return proto.CompactTextString(m) }
func (*Res) ProtoMessage()    {}
func (*Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_ce715f27580cb8fe, []int{4}
}
func (m *Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Res.Unmarshal(m, b)
}
func (m *Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Res.Marshal(b, m, deterministic)
}
func (dst *Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Res.Merge(dst, src)
}
func (m *Res) XXX_Size() int {
	return xxx_messageInfo_Res.Size(m)
}
func (m *Res) XXX_DiscardUnknown() {
	xxx_messageInfo_Res.DiscardUnknown(m)
}

var xxx_messageInfo_Res proto.InternalMessageInfo

func (m *Res) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*FolderInfo)(nil), "proto.FolderInfo")
	proto.RegisterType((*FileInfo)(nil), "proto.FileInfo")
	proto.RegisterType((*FileData)(nil), "proto.FileData")
	proto.RegisterType((*ContainerInfo)(nil), "proto.ContainerInfo")
	proto.RegisterType((*Res)(nil), "proto.Res")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileTransferServiceClient is the client API for FileTransferService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileTransferServiceClient interface {
	GetFolderInfo(ctx context.Context, in *FolderInfo, opts ...grpc.CallOption) (*Res, error)
	GetFileInfo(ctx context.Context, in *FileInfo, opts ...grpc.CallOption) (*Res, error)
	TransferFile(ctx context.Context, opts ...grpc.CallOption) (FileTransferService_TransferFileClient, error)
	RestoreContainer(ctx context.Context, in *ContainerInfo, opts ...grpc.CallOption) (*Res, error)
}

type fileTransferServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileTransferServiceClient(cc *grpc.ClientConn) FileTransferServiceClient {
	return &fileTransferServiceClient{cc}
}

func (c *fileTransferServiceClient) GetFolderInfo(ctx context.Context, in *FolderInfo, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/proto.FileTransferService/getFolderInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileTransferServiceClient) GetFileInfo(ctx context.Context, in *FileInfo, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/proto.FileTransferService/getFileInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileTransferServiceClient) TransferFile(ctx context.Context, opts ...grpc.CallOption) (FileTransferService_TransferFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileTransferService_serviceDesc.Streams[0], "/proto.FileTransferService/transferFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileTransferServiceTransferFileClient{stream}
	return x, nil
}

type FileTransferService_TransferFileClient interface {
	Send(*FileData) error
	CloseAndRecv() (*Res, error)
	grpc.ClientStream
}

type fileTransferServiceTransferFileClient struct {
	grpc.ClientStream
}

func (x *fileTransferServiceTransferFileClient) Send(m *FileData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fileTransferServiceTransferFileClient) CloseAndRecv() (*Res, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Res)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileTransferServiceClient) RestoreContainer(ctx context.Context, in *ContainerInfo, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/proto.FileTransferService/restoreContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileTransferServiceServer is the server API for FileTransferService service.
type FileTransferServiceServer interface {
	GetFolderInfo(context.Context, *FolderInfo) (*Res, error)
	GetFileInfo(context.Context, *FileInfo) (*Res, error)
	TransferFile(FileTransferService_TransferFileServer) error
	RestoreContainer(context.Context, *ContainerInfo) (*Res, error)
}

func RegisterFileTransferServiceServer(s *grpc.Server, srv FileTransferServiceServer) {
	s.RegisterService(&_FileTransferService_serviceDesc, srv)
}

func _FileTransferService_GetFolderInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FolderInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServiceServer).GetFolderInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileTransferService/GetFolderInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServiceServer).GetFolderInfo(ctx, req.(*FolderInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileTransferService_GetFileInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServiceServer).GetFileInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileTransferService/GetFileInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServiceServer).GetFileInfo(ctx, req.(*FileInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileTransferService_TransferFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FileTransferServiceServer).TransferFile(&fileTransferServiceTransferFileServer{stream})
}

type FileTransferService_TransferFileServer interface {
	SendAndClose(*Res) error
	Recv() (*FileData, error)
	grpc.ServerStream
}

type fileTransferServiceTransferFileServer struct {
	grpc.ServerStream
}

func (x *fileTransferServiceTransferFileServer) SendAndClose(m *Res) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fileTransferServiceTransferFileServer) Recv() (*FileData, error) {
	m := new(FileData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FileTransferService_RestoreContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileTransferServiceServer).RestoreContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileTransferService/RestoreContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileTransferServiceServer).RestoreContainer(ctx, req.(*ContainerInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileTransferService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FileTransferService",
	HandlerType: (*FileTransferServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getFolderInfo",
			Handler:    _FileTransferService_GetFolderInfo_Handler,
		},
		{
			MethodName: "getFileInfo",
			Handler:    _FileTransferService_GetFileInfo_Handler,
		},
		{
			MethodName: "restoreContainer",
			Handler:    _FileTransferService_RestoreContainer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "transferFile",
			Handler:       _FileTransferService_TransferFile_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_ce715f27580cb8fe) }

var fileDescriptor_service_ce715f27580cb8fe = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4d, 0x4a, 0x04, 0x31,
	0x10, 0x85, 0x8d, 0xff, 0x96, 0xd3, 0xa8, 0xa5, 0x8b, 0xc6, 0x85, 0x36, 0x71, 0xd3, 0x0b, 0x19,
	0x65, 0x04, 0x2f, 0xa0, 0x0c, 0xb8, 0x8d, 0x5e, 0xa0, 0xb4, 0x6b, 0x86, 0x86, 0xe9, 0x44, 0x92,
	0xe0, 0x71, 0x3d, 0x8b, 0x24, 0x9d, 0xa8, 0x11, 0x9c, 0x55, 0xaa, 0x5e, 0xbd, 0xc7, 0xe3, 0x0b,
	0x54, 0x8e, 0xed, 0x47, 0xff, 0xc6, 0xd3, 0x77, 0x6b, 0xbc, 0xc1, 0x9d, 0xf8, 0xc8, 0x06, 0x60,
	0x6e, 0x56, 0x1d, 0xdb, 0x27, 0xbd, 0x30, 0x88, 0xb0, 0xad, 0x69, 0xe0, 0x5a, 0x34, 0xa2, 0x3d,
	0x50, 0x71, 0x96, 0x33, 0xd8, 0x9f, 0xf7, 0x2b, 0xfe, 0xef, 0x1e, 0xb4, 0xc1, 0x74, 0x5c, 0x6f,
	0x36, 0xa2, 0xad, 0x54, 0x9c, 0xe5, 0xc5, 0x98, 0x79, 0x24, 0x4f, 0xe1, 0xde, 0x91, 0xa7, 0x98,
	0x99, 0xa8, 0x38, 0xcb, 0x2b, 0xa8, 0x1e, 0x8c, 0xf6, 0xd4, 0xeb, 0x35, 0xc5, 0x97, 0xb0, 0xa5,
	0xd8, 0x61, 0x0d, 0x7b, 0x03, 0x3b, 0x47, 0xcb, 0x7c, 0xcd, 0xeb, 0xec, 0x53, 0xc0, 0x69, 0xa8,
	0x79, 0xb1, 0xa4, 0xdd, 0x82, 0xed, 0xf3, 0x08, 0x88, 0xb7, 0x50, 0x2d, 0xd9, 0xff, 0xc2, 0x3a,
	0x19, 0x99, 0xa7, 0x3f, 0xd2, 0x39, 0x24, 0x49, 0xb1, 0x93, 0x1b, 0x78, 0x0d, 0x87, 0x21, 0x91,
	0x31, 0x8f, 0xb2, 0x3f, 0x09, 0x7f, 0xdc, 0x37, 0x30, 0xf1, 0xa9, 0x32, 0x38, 0x0a, 0x7b, 0x40,
	0x2e, 0xed, 0xad, 0xc0, 0x7b, 0x38, 0xb6, 0xec, 0xbc, 0xb1, 0xfc, 0x4d, 0x8d, 0x67, 0xc9, 0x53,
	0xfc, 0x43, 0x99, 0x7c, 0xdd, 0x8d, 0xcb, 0xdd, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0x9a,
	0x07, 0xa3, 0xbb, 0x01, 0x00, 0x00,
}
